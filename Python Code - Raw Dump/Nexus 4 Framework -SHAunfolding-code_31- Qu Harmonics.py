import matplotlib.pyplot as plt
import numpy as np
from matplotlib.widgets import Slider

# Data
data = ("5143614111020411149104143134141356110505813117310111126390279591034141211813121171412512910123456789012345678901234567890123456789012345678901234567890123456789012345678901234567894567891011121314150123456789101112131415012345678910111213141501234567891011121314150123456789101112131415012345678910111213141501234567891011121314150123456789101112131415012345678910111213141501234567891011121314150123456789101112131415012345671234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601234567891011121314151601123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161701234567891011121314151617012345678910111213141516170123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123456789101112131415161718012345678910111213141516171801234567891011121314151617180123"
)

# Convert the data string to an array of integers
values = np.array(list(data), dtype=int)

# Initial matrix width and height
initial_width = 256
height = len(values) // initial_width + 1

# Create the figure and axis
fig, ax = plt.subplots(figsize=(10, 6))
plt.subplots_adjust(bottom=0.2)

# Function to plot the matrix
def plot_matrix(width):
    ax.clear()
    height = len(values) // width + 1
    matrix = np.full((height, width), "", dtype=object)
    for i in range(len(values)):
        row, col = divmod(i, width)
        matrix[row, col] = str(values[i])
    for y in range(height):
        for x in range(width):
            if matrix[y, x]:
                ax.text(x, -y, matrix[y, x], fontsize=6, ha='center', va='center')
    ax.set_xlim(-0.5, width - 0.5)
    ax.set_ylim(-height + 0.5, 0.5)
    ax.axis('off')

# Initial plot
plot_matrix(initial_width)

# Create the slider
ax_slider = plt.axes([0.25, 0.05, 0.5, 0.03])
slider = Slider(ax_slider, 'Width', 1, 512, valinit=initial_width, valstep=1)

# Update function for the slider
def update(val):
    width = int(slider.val)
    plot_matrix(width)
    plt.draw()

slider.on_changed(update)

plt.show()
